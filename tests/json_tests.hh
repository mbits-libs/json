// Copyright (c) 2021 midnightBITS
// This code is licensed under MIT license (see LICENSE for details)

#pragma once

#include "json.hh"

namespace json::testing {
	template <typename... Items>
	static inline json::node mk_array(Items&&... items) {
		return json::array{std::forward<Items>(items)...};
	}

	template <typename... Items>
	static inline json::node mk_array10(Items&&... items) {
		return mk_array(mk_array(mk_array(mk_array(mk_array(mk_array(mk_array(
		    mk_array(mk_array(mk_array(std::forward<Items>(items)...))))))))));
	}

	template <typename... Items>
	static inline json::node mk_array100(Items&&... items) {
		return mk_array10(mk_array10(
		    mk_array10(mk_array10(mk_array10(mk_array10(mk_array10(mk_array10(
		        mk_array10(mk_array10(std::forward<Items>(items)...))))))))));
	}

	node_testcase const github_com_nst_JSONTestSuite[] = {
		{
			"i_number_double_huge_neg_exp"sv,
			u8"[123.456e-789]"sv,
		},
		{
			"i_number_huge_exp"sv,
			u8"[0.4e00669999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999969999999006]"sv,
		},
		{
			"i_number_neg_int_huge_exp"sv,
			u8"[-1e+9999]"sv,
		},
		{
			"i_number_pos_double_huge_exp"sv,
			u8"[1.5e+9999]"sv,
		},
		{
			"i_number_real_neg_overflow"sv,
			u8"[-123123e100000]"sv,
		},
		{
			"i_number_real_pos_overflow"sv,
			u8"[123123e100000]"sv,
		},
		{
			"i_number_real_underflow"sv,
			u8"[123e-10000000]"sv,
		},
		{
			"i_number_too_big_neg_int"sv,
			u8"[-123123123123123123123123123123]"sv,
		},
		{
			"i_number_too_big_pos_int"sv,
			u8"[100000000000000000000]"sv,
		},
		{
			"i_number_very_big_negative_int"sv,
			u8"[-237462374673276894279832749832423479823246327846]"sv,
		},
		{
			"i_object_key_lone_2nd_surrogate"sv,
			u8"{\"\\uDFAA\":0}"sv,
			json::map{{u8"\uFFFD",0ll},},
		},
		{
			"i_string_1st_surrogate_but_2nd_missing"sv,
			u8"[\"\\uDADA\"]"sv,
			json::array{u8"\uFFFD",},
		},
		{
			"i_string_1st_valid_surrogate_2nd_invalid"sv,
			u8"[\"\\uD888\\u1234\"]"sv,
			json::array{u8"\uFFFD\u1234",},
		},
		{
			"i_string_incomplete_surrogates_escape_valid"sv,
			u8"[\"\\uD800\\uD800\\n\"]"sv,
			json::array{u8"\uFFFD\uFFFD\n",},
		},
		{
			"i_string_incomplete_surrogate_and_escape_valid"sv,
			u8"[\"\\uD800\\n\"]"sv,
			json::array{u8"\uFFFD\n",},
		},
		{
			"i_string_incomplete_surrogate_pair"sv,
			u8"[\"\\uDd1ea\"]"sv,
			json::array{u8"\uFFFDa",},
		},
		{
			"i_string_invalid_lonely_surrogate"sv,
			u8"[\"\\ud800\"]"sv,
			json::array{u8"\uFFFD",},
		},
		{
			"i_string_invalid_surrogate"sv,
			u8"[\"\\ud800abc\"]"sv,
			json::array{u8"\uFFFDabc",},
		},
		{
			"i_string_invalid_utf-8"sv,
			u8"[\"\377\"]"sv,
			json::array{u8"\377",},
		},
		{
			"i_string_inverted_surrogates_U+1D11E"sv,
			u8"[\"\\uDd1e\\uD834\"]"sv,
			json::array{u8"\uFFFD\uFFFD",},
		},
		{
			"i_string_iso_latin_1"sv,
			u8"[\"\351\"]"sv,
			json::array{u8"\351",},
		},
		{
			"i_string_lone_second_surrogate"sv,
			u8"[\"\\uDFAA\"]"sv,
			json::array{u8"\uFFFD",},
		},
		{
			"i_string_lone_utf8_continuation_byte"sv,
			u8"[\"\201\"]"sv,
			json::array{u8"\201",},
		},
		{
			"i_string_not_in_unicode_range"sv,
			u8"[\"\364\277\277\277\"]"sv,
			json::array{u8"\364\277\277\277",},
		},
		{
			"i_string_overlong_sequence_2_bytes"sv,
			u8"[\"\300\257\"]"sv,
			json::array{u8"\300\257",},
		},
		{
			"i_string_overlong_sequence_6_bytes"sv,
			u8"[\"\374\203\277\277\277\277\"]"sv,
			json::array{u8"\374\203\277\277\277\277",},
		},
		{
			"i_string_overlong_sequence_6_bytes_null"sv,
			u8"[\"\374\200\200\200\200\200\"]"sv,
			json::array{u8"\374\200\200\200\200\200",},
		},
		{
			"i_string_truncated-utf-8"sv,
			u8"[\"\340\377\"]"sv,
			json::array{u8"\340\377",},
		},
		// i_string_UTF-16LE_with_BOM
		{
			"i_string_UTF-8_invalid_sequence"sv,
			u8"[\"\346\227\245\321\210\372\"]"sv,
			json::array{u8"\346\227\245\321\210\372",},
		},
		// i_string_utf16BE_no_BOM
		// i_string_utf16LE_no_BOM
		{
			"i_string_UTF8_surrogate_U+D800"sv,
			u8"[\"\355\240\200\"]"sv,
			json::array{u8"\355\240\200",},
		},
		{
			"i_structure_500_nested_arrays"sv,
			usv,
			mk_array100(mk_array100(mk_array100(mk_array100(mk_array100())))),
		},
		// i_structure_UTF-8_BOM_empty_object
		{
			"n_array_1_true_without_comma"sv,
			u8"[1 true]"sv,
		},
		{
			"n_array_a_invalid_utf8"sv,
			u8"[a\345]"sv,
		},
		{
			"n_array_colon_instead_of_comma"sv,
			u8"[\"\": 1]"sv,
		},
		{
			"n_array_comma_after_close"sv,
			u8"[\"\"],"sv,
		},
		{
			"n_array_comma_and_number"sv,
			u8"[,1]"sv,
		},
		{
			"n_array_double_comma"sv,
			u8"[1,,2]"sv,
		},
		{
			"n_array_double_extra_comma"sv,
			u8"[\"x\",,]"sv,
		},
		{
			"n_array_extra_close"sv,
			u8"[\"x\"]]"sv,
		},
		{
			"n_array_extra_comma"sv,
			u8"[\"\",]"sv,
			json::array{"",},
		},
		{
			"n_array_incomplete"sv,
			u8"[\"x\""sv,
		},
		{
			"n_array_incomplete_invalid_value"sv,
			u8"[x"sv,
		},
		{
			"n_array_inner_array_no_comma"sv,
			u8"[3[4]]"sv,
		},
		{
			"n_array_invalid_utf8"sv,
			u8"[\377]"sv,
		},
		{
			"n_array_items_separated_by_semicolon"sv,
			u8"[1:2]"sv,
		},
		{
			"n_array_just_comma"sv,
			u8"[,]"sv,
		},
		{
			"n_array_just_minus"sv,
			u8"[-]"sv,
		},
		{
			"n_array_missing_value"sv,
			u8"[   , \"\"]"sv,
		},
		{
			"n_array_newlines_unclosed"sv,
			u8"[\"a\",\n4\n,1,"sv,
		},
		{
			"n_array_number_and_comma"sv,
			u8"[1,]"sv,
			json::array{1ll,},
		},
		{
			"n_array_number_and_several_commas"sv,
			u8"[1,,]"sv,
		},
		{
			"n_array_spaces_vertical_tab_formfeed"sv,
			u8"[\"\va\"\\f]"sv,
		},
		{
			"n_array_star_inside"sv,
			u8"[*]"sv,
		},
		{
			"n_array_unclosed"sv,
			u8"[\"\""sv,
		},
		{
			"n_array_unclosed_trailing_comma"sv,
			u8"[1,"sv,
		},
		{
			"n_array_unclosed_with_new_lines"sv,
			u8"[1,\n1\n,1"sv,
		},
		{
			"n_array_unclosed_with_object_inside"sv,
			u8"[{}"sv,
		},
		{
			"n_incomplete_false"sv,
			u8"[fals]"sv,
		},
		{
			"n_incomplete_null"sv,
			u8"[nul]"sv,
		},
		{
			"n_incomplete_true"sv,
			u8"[tru]"sv,
		},
		{
			"n_multidigit_number_then_00"sv,
			u8"123\000"sv,
		},
		{
			"n_number_++"sv,
			u8"[++1234]"sv,
		},
		{
			"n_number_+1"sv,
			u8"[+1]"sv,
		},
		{
			"n_number_+Inf"sv,
			u8"[+Inf]"sv,
		},
		{
			"n_number_-01"sv,
			u8"[-01]"sv,
		},
		{
			"n_number_-1.0."sv,
			u8"[-1.0.]"sv,
		},
		{
			"n_number_-2."sv,
			u8"[-2.]"sv,
		},
		{
			"n_number_-NaN"sv,
			u8"[-NaN]"sv,
		},
		{
			"n_number_.-1"sv,
			u8"[.-1]"sv,
		},
		{
			"n_number_.2e-3"sv,
			u8"[.2e-3]"sv,
		},
		{
			"n_number_0.1.2"sv,
			u8"[0.1.2]"sv,
		},
		{
			"n_number_0.3e+"sv,
			u8"[0.3e+]"sv,
		},
		{
			"n_number_0.3e"sv,
			u8"[0.3e]"sv,
		},
		{
			"n_number_0.e1"sv,
			u8"[0.e1]"sv,
		},
		{
			"n_number_0e+"sv,
			u8"[0e+]"sv,
		},
		{
			"n_number_0e"sv,
			u8"[0e]"sv,
		},
		{
			"n_number_0_capital_E+"sv,
			u8"[0E+]"sv,
		},
		{
			"n_number_0_capital_E"sv,
			u8"[0E]"sv,
		},
		{
			"n_number_1.0e+"sv,
			u8"[1.0e+]"sv,
		},
		{
			"n_number_1.0e-"sv,
			u8"[1.0e-]"sv,
		},
		{
			"n_number_1.0e"sv,
			u8"[1.0e]"sv,
		},
		{
			"n_number_1eE2"sv,
			u8"[1eE2]"sv,
		},
		{
			"n_number_1_000"sv,
			u8"[1 000.0]"sv,
		},
		{
			"n_number_2.e+3"sv,
			u8"[2.e+3]"sv,
		},
		{
			"n_number_2.e-3"sv,
			u8"[2.e-3]"sv,
		},
		{
			"n_number_2.e3"sv,
			u8"[2.e3]"sv,
		},
		{
			"n_number_9.e+"sv,
			u8"[9.e+]"sv,
		},
		{
			"n_number_expression"sv,
			u8"[1+2]"sv,
		},
		{
			"n_number_hex_1_digit"sv,
			u8"[0x1]"sv,
		},
		{
			"n_number_hex_2_digits"sv,
			u8"[0x42]"sv,
		},
		{
			"n_number_Inf"sv,
			u8"[Inf]"sv,
		},
		{
			"n_number_infinity"sv,
			u8"[Infinity]"sv,
		},
		{
			"n_number_invalid+-"sv,
			u8"[0e+-1]"sv,
		},
		{
			"n_number_invalid-negative-real"sv,
			u8"[-123.123foo]"sv,
		},
		{
			"n_number_invalid-utf-8-in-bigger-int"sv,
			u8"[123\345]"sv,
		},
		{
			"n_number_invalid-utf-8-in-exponent"sv,
			u8"[1e1\345]"sv,
		},
		{
			"n_number_invalid-utf-8-in-int"sv,
			u8"[0\345]\n"sv,
		},
		{
			"n_number_minus_infinity"sv,
			u8"[-Infinity]"sv,
		},
		{
			"n_number_minus_sign_with_trailing_garbage"sv,
			u8"[-foo]"sv,
		},
		{
			"n_number_minus_space_1"sv,
			u8"[- 1]"sv,
		},
		{
			"n_number_NaN"sv,
			u8"[NaN]"sv,
		},
		{
			"n_number_neg_int_starting_with_zero"sv,
			u8"[-012]"sv,
		},
		{
			"n_number_neg_real_without_int_part"sv,
			u8"[-.123]"sv,
		},
		{
			"n_number_neg_with_garbage_at_end"sv,
			u8"[-1x]"sv,
		},
		{
			"n_number_real_garbage_after_e"sv,
			u8"[1ea]"sv,
		},
		{
			"n_number_real_without_fractional_part"sv,
			u8"[1.]"sv,
		},
		{
			"n_number_real_with_invalid_utf8_after_e"sv,
			u8"[1e\345]"sv,
		},
		{
			"n_number_starting_with_dot"sv,
			u8"[.123]"sv,
		},
		{
			"n_number_U+FF11_fullwidth_digit_one"sv,
			u8"[\357\274\221]"sv,
		},
		{
			"n_number_with_alpha"sv,
			u8"[1.2a-3]"sv,
		},
		{
			"n_number_with_alpha_char"sv,
			u8"[1.8011670033376514H-308]"sv,
		},
		{
			"n_number_with_leading_zero"sv,
			u8"[012]"sv,
		},
		{
			"n_object_bad_value"sv,
			u8"[\"x\", truth]"sv,
		},
		{
			"n_object_bracket_key"sv,
			u8"{[: \"x\"}\n"sv,
		},
		{
			"n_object_comma_instead_of_colon"sv,
			u8"{\"x\", null}"sv,
		},
		{
			"n_object_double_colon"sv,
			u8"{\"x\"::\"b\"}"sv,
		},
		{
			"n_object_emoji"sv,
			u8"{\360\237\207\250\360\237\207\255}"sv,
		},
		{
			"n_object_garbage_at_end"sv,
			u8"{\"a\":\"a\" 123}"sv,
		},
		{
			"n_object_key_with_single_quotes"sv,
			u8"{key: 'value'}"sv,
		},
		{
			"n_object_lone_continuation_byte_in_key_and_trailing_comma"sv,
			u8"{\"\271\":\"0\",}"sv,
			json::map{{u8"\271","0"},},
		},
		{
			"n_object_missing_colon"sv,
			u8"{\"a\" b}"sv,
		},
		{
			"n_object_missing_key"sv,
			u8"{:\"b\"}"sv,
		},
		{
			"n_object_missing_semicolon"sv,
			u8"{\"a\" \"b\"}"sv,
		},
		{
			"n_object_missing_value"sv,
			u8"{\"a\":"sv,
		},
		{
			"n_object_no-colon"sv,
			u8"{\"a\""sv,
		},
		{
			"n_object_non_string_key"sv,
			u8"{1:1}"sv,
		},
		{
			"n_object_non_string_key_but_huge_number_instead"sv,
			u8"{9999E9999:1}"sv,
		},
		{
			"n_object_repeated_null_null"sv,
			u8"{null:null,null:null}"sv,
		},
		{
			"n_object_several_trailing_commas"sv,
			u8"{\"id\":0,,,,,}"sv,
		},
		{
			"n_object_single_quote"sv,
			u8"{'a':0}"sv,
		},
		{
			"n_object_trailing_comma"sv,
			u8"{\"id\":0,}"sv,
			json::map{{u8"id",0ll},},
		},
		{
			"n_object_trailing_comment"sv,
			u8"{\"a\":\"b\"}/**/"sv,
		},
		{
			"n_object_trailing_comment_open"sv,
			u8"{\"a\":\"b\"}/**//"sv,
		},
		{
			"n_object_trailing_comment_slash_open"sv,
			u8"{\"a\":\"b\"}//"sv,
		},
		{
			"n_object_trailing_comment_slash_open_incomplete"sv,
			u8"{\"a\":\"b\"}/"sv,
		},
		{
			"n_object_two_commas_in_a_row"sv,
			u8"{\"a\":\"b\",,\"c\":\"d\"}"sv,
		},
		{
			"n_object_unquoted_key"sv,
			u8"{a: \"b\"}"sv,
		},
		{
			"n_object_unterminated-value"sv,
			u8"{\"a\":\"a"sv,
		},
		{
			"n_object_with_single_string"sv,
			u8"{ \"foo\" : \"bar\", \"a\" }"sv,
		},
		{
			"n_object_with_trailing_garbage"sv,
			u8"{\"a\":\"b\"}#"sv,
		},
		{
			"n_single_space"sv,
			u8" "sv,
		},
		{
			"n_string_1_surrogate_then_escape"sv,
			u8"[\"\\uD800\\\"]"sv,
		},
		{
			"n_string_1_surrogate_then_escape_u"sv,
			u8"[\"\\uD800\\u\"]"sv,
		},
		{
			"n_string_1_surrogate_then_escape_u1"sv,
			u8"[\"\\uD800\\u1\"]"sv,
		},
		{
			"n_string_1_surrogate_then_escape_u1x"sv,
			u8"[\"\\uD800\\u1x\"]"sv,
		},
		{
			"n_string_accentuated_char_no_quotes"sv,
			u8"[\303\251]"sv,
		},
		{
			"n_string_backslash_00"sv,
			u8"[\"\\\000\"]"sv,
		},
		{
			"n_string_escaped_backslash_bad"sv,
			u8"[\"\\\\\\\"]"sv,
		},
		{
			"n_string_escaped_ctrl_char_tab"sv,
			u8"[\"\\\t\"]"sv,
		},
		{
			"n_string_escaped_emoji"sv,
			u8"[\"\\\360\237\214\200\"]"sv,
		},
		{
			"n_string_escape_x"sv,
			u8"[\"\\x00\"]"sv,
		},
		{
			"n_string_incomplete_escape"sv,
			u8"[\"\\\"]"sv,
		},
		{
			"n_string_incomplete_escaped_character"sv,
			u8"[\"\\u00A\"]"sv,
		},
		{
			"n_string_incomplete_surrogate"sv,
			u8"[\"\\uD834\\uDd\"]"sv,
		},
		{
			"n_string_incomplete_surrogate_escape_invalid"sv,
			u8"[\"\\uD800\\uD800\\x\"]"sv,
		},
		{
			"n_string_invalid-utf-8-in-escape"sv,
			u8"[\"\\u\345\"]"sv,
		},
		{
			"n_string_invalid_backslash_esc"sv,
			u8"[\"\\a\"]"sv,
		},
		{
			"n_string_invalid_unicode_escape"sv,
			u8"[\"\\uqqqq\"]"sv,
		},
		{
			"n_string_invalid_utf8_after_escape"sv,
			u8"[\"\\\345\"]"sv,
		},
		{
			"n_string_leading_uescaped_thinspace"sv,
			u8"[\\u0020\"asd\"]"sv,
		},
		{
			"n_string_no_quotes_with_bad_escape"sv,
			u8"[\\n]"sv,
		},
		{
			"n_string_single_doublequote"sv,
			u8"\""sv,
		},
		{
			"n_string_single_quote"sv,
			u8"['single quote']"sv,
		},
		{
			"n_string_single_string_no_double_quotes"sv,
			u8"abc"sv,
		},
		{
			"n_string_start_escape_unclosed"sv,
			u8"[\"\\"sv,
		},
		{
			"n_string_unescaped_ctrl_char"sv,
			u8"[\"a\000a\"]"sv,
		},
		{
			"n_string_unescaped_newline"sv,
			u8"[\"new\nline\"]"sv,
		},
		{
			"n_string_unescaped_tab"sv,
			u8"[\"\t\"]"sv,
		},
		{
			"n_string_unicode_CapitalU"sv,
			u8"\"\\UA66D\""sv,
		},
		{
			"n_string_with_trailing_garbage"sv,
			u8"\"\"x"sv,
		},
#if !defined(_MSC_VER) && !defined(__clang__)
		{
			"n_structure_100000_opening_arrays",
#include "n_structure_100000_opening_arrays.inc"
		},
#endif
		{
			"n_structure_angle_bracket_."sv,
			u8"<.>"sv,
		},
		{
			"n_structure_angle_bracket_null"sv,
			u8"[<null>]"sv,
		},
		{
			"n_structure_array_trailing_garbage"sv,
			u8"[1]x"sv,
		},
		{
			"n_structure_array_with_extra_array_close"sv,
			u8"[1]]"sv,
		},
		{
			"n_structure_array_with_unclosed_string"sv,
			u8"[\"asd]"sv,
		},
		{
			"n_structure_ascii-unicode-identifier"sv,
			u8"a\303\245"sv,
		},
		{
			"n_structure_capitalized_True"sv,
			u8"[True]"sv,
		},
		{
			"n_structure_close_unopened_array"sv,
			u8"1]"sv,
		},
		{
			"n_structure_comma_instead_of_closing_brace"sv,
			u8"{\"x\": true,"sv,
		},
		{
			"n_structure_double_array"sv,
			u8"[][]"sv,
		},
		{
			"n_structure_end_array"sv,
			u8"]"sv,
		},
		{
			"n_structure_incomplete_UTF8_BOM"sv,
			u8"\357\273{}"sv,
		},
		{
			"n_structure_lone-invalid-utf-8"sv,
			u8"\345"sv,
		},
		{
			"n_structure_lone-open-bracket"sv,
			u8"["sv,
		},
		{
			"n_structure_no_data"sv,
			u8""sv,
		},
		{
			"n_structure_null-byte-outside-string"sv,
			u8"[\000]"sv,
		},
		{
			"n_structure_number_with_trailing_garbage"sv,
			u8"2@"sv,
		},
		{
			"n_structure_object_followed_by_closing_object"sv,
			u8"{}}"sv,
		},
		{
			"n_structure_object_unclosed_no_value"sv,
			u8"{\"\":"sv,
		},
		{
			"n_structure_object_with_comment"sv,
			u8"{\"a\":/*comment*/\"b\"}"sv,
		},
		{
			"n_structure_object_with_trailing_garbage"sv,
			u8"{\"a\": true} \"x\""sv,
		},
		{
			"n_structure_open_array_apostrophe"sv,
			u8"['"sv,
		},
		{
			"n_structure_open_array_comma"sv,
			u8"[,"sv,
		},
#if !defined(_MSC_VER) && !defined(__clang__)
		{
			"n_structure_open_array_object",
#include "n_structure_open_array_object.inc"
		},
#endif
		{
			"n_structure_open_array_open_object"sv,
			u8"[{"sv,
		},
		{
			"n_structure_open_array_open_string"sv,
			u8"[\"a"sv,
		},
		{
			"n_structure_open_array_string"sv,
			u8"[\"a\""sv,
		},
		{
			"n_structure_open_object"sv,
			u8"{"sv,
		},
		{
			"n_structure_open_object_close_array"sv,
			u8"{]"sv,
		},
		{
			"n_structure_open_object_comma"sv,
			u8"{,"sv,
		},
		{
			"n_structure_open_object_open_array"sv,
			u8"{["sv,
		},
		{
			"n_structure_open_object_open_string"sv,
			u8"{\"a"sv,
		},
		{
			"n_structure_open_object_string_with_apostrophes"sv,
			u8"{'a'"sv,
		},
		{
			"n_structure_open_open"sv,
			u8"[\"\\{[\"\\{[\"\\{[\"\\{"sv,
		},
		{
			"n_structure_single_eacute"sv,
			u8"\351"sv,
		},
		{
			"n_structure_single_star"sv,
			u8"*"sv,
		},
		{
			"n_structure_trailing_#"sv,
			u8"{\"a\":\"b\"}#{}"sv,
		},
		{
			"n_structure_U+2060_word_joined"sv,
			u8"[\342\201\240]"sv,
		},
		{
			"n_structure_uescaped_LF_before_string"sv,
			u8"[\\u000A\"\"]"sv,
		},
		{
			"n_structure_unclosed_array"sv,
			u8"[1"sv,
		},
		{
			"n_structure_unclosed_array_partial_null"sv,
			u8"[ false, nul"sv,
		},
		{
			"n_structure_unclosed_array_unfinished_false"sv,
			u8"[ true, fals"sv,
		},
		{
			"n_structure_unclosed_array_unfinished_true"sv,
			u8"[ false, tru"sv,
		},
		{
			"n_structure_unclosed_object"sv,
			u8"{\"asd\":\"asd\""sv,
		},
		{
			"n_structure_unicode-identifier"sv,
			u8"\303\245"sv,
		},
		{
			"n_structure_UTF8_BOM_no_data"sv,
			u8"\357\273\277"sv,
		},
		{
			"n_structure_whitespace_formfeed"sv,
			u8"[\f]"sv,
		},
		{
			"n_structure_whitespace_U+2060_word_joiner"sv,
			u8"[\342\201\240]"sv,
		},
		{
			"y_array_arraysWithSpaces"sv,
			u8"[[]   ]"sv,
			mk_array(mk_array()),
		},
		{
			"y_array_empty-string"sv,
			u8"[\"\"]"sv,
			json::array{"",},
		},
		{
			"y_array_empty"sv,
			u8"[]"sv,
			json::array{},
		},
		{
			"y_array_ending_with_newline"sv,
			u8"[\"a\"]"sv,
			json::array{"a",},
		},
		{
			"y_array_false"sv,
			u8"[false]"sv,
			json::array{false,},
		},
		{
			"y_array_heterogeneous"sv,
			u8"[null, 1, \"1\", {}]"sv,
			json::array{nullptr,1ll,"1",json::map{},},
		},
		{
			"y_array_null"sv,
			u8"[null]"sv,
			json::array{nullptr,},
		},
		{
			"y_array_with_1_and_newline"sv,
			u8"[1\n]"sv,
			json::array{1ll,},
		},
		{
			"y_array_with_leading_space"sv,
			u8" [1]"sv,
			json::array{1ll,},
		},
		{
			"y_array_with_several_null"sv,
			u8"[1,null,null,null,2]"sv,
			json::array{1ll,nullptr,nullptr,nullptr,2ll,},
		},
		{
			"y_array_with_trailing_space"sv,
			u8"[2] "sv,
			json::array{2ll,},
		},
		{
			"y_number"sv,
			u8"[123e65]"sv,
			json::array{123e65,},
		},
		{
			"y_number_0e+1"sv,
			u8"[0e+1]"sv,
			json::array{0.000000,},
		},
		{
			"y_number_0e1"sv,
			u8"[0e1]"sv,
			json::array{0.000000,},
		},
		{
			"y_number_after_space"sv,
			u8"[ 4]"sv,
			json::array{4ll,},
		},
		{
			"y_number_double_close_to_zero"sv,
			u8"[-0.000000000000000000000000000000000000000000000000000000000000000000000000000001]\n"sv,
			json::array{-1e-78,},
		},
		{
			"y_number_int_with_exp"sv,
			u8"[20e1]"sv,
			json::array{200.000000,},
		},
		{
			"y_number_minus_zero"sv,
			u8"[-0]"sv,
			json::array{0ll,},
		},
		{
			"y_number_negative_int"sv,
			u8"[-123]"sv,
			json::array{-123ll,},
		},
		{
			"y_number_negative_one"sv,
			u8"[-1]"sv,
			json::array{-1ll,},
		},
		{
			"y_number_negative_zero"sv,
			u8"[-0]"sv,
			json::array{0ll,},
		},
		{
			"y_number_real_capital_e"sv,
			u8"[1E22]"sv,
			json::array{1E22,},
		},
		{
			"y_number_real_capital_e_neg_exp"sv,
			u8"[1E-2]"sv,
			json::array{1E-2,},
		},
		{
			"y_number_real_capital_e_pos_exp"sv,
			u8"[1E+2]"sv,
			json::array{1E+2,},
		},
		{
			"y_number_real_exponent"sv,
			u8"[123e45]"sv,
			json::array{123e45,},
		},
		{
			"y_number_real_fraction_exponent"sv,
			u8"[123.456e78]"sv,
			json::array{123.456e78,},
		},
		{
			"y_number_real_neg_exp"sv,
			u8"[1e-2]"sv,
			json::array{1e-2,},
		},
		{
			"y_number_real_pos_exponent"sv,
			u8"[1e+2]"sv,
			json::array{1e+2,},
		},
		{
			"y_number_simple_int"sv,
			u8"[123]"sv,
			json::array{123ll,},
		},
		{
			"y_number_simple_real"sv,
			u8"[123.456789]"sv,
			json::array{123.456789,},
		},
		{
			"y_object"sv,
			u8"{\"asd\":\"sdf\", \"dfg\":\"fgh\"}"sv,
			json::map{{u8"asd",u8"sdf"},{u8"dfg",u8"fgh"},},
		},
		{
			"y_object_basic"sv,
			u8"{\"asd\":\"sdf\"}"sv,
			json::map{{u8"asd",u8"sdf"},},
		},
		{
			"y_object_duplicated_key"sv,
			u8"{\"a\":\"b\",\"a\":\"c\"}"sv,
			json::map{{u8"a",u8"c"},},
		},
		{
			"y_object_duplicated_key_and_value"sv,
			u8"{\"a\":\"b\",\"a\":\"b\"}"sv,
			json::map{{u8"a",u8"b"},},
		},
		{
			"y_object_empty"sv,
			u8"{}"sv,
			json::map{},
		},
		{
			"y_object_empty_key"sv,
			u8"{\"\":0}"sv,
			json::map{{u8"",0ll},},
		},
		{
			"y_object_escaped_null_in_key"sv,
			u8"{\"foo\\u0000bar\": 42}"sv,
			json::map{{u8"foo\000bar"s,42ll},},
		},
		{
			"y_object_extreme_numbers"sv,
			u8"{ \"min\": -1.0e+28, \"max\": 1.0e+28 }"sv,
			json::map{{u8"max",9999999999999999583119736832.000000},{u8"min",-9999999999999999583119736832.000000},},
		},
		{
			"y_object_long_strings"sv,
			u8"{\"x\":[{\"id\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}], \"id\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"}"sv,
			json::map{
				{u8"id",u8"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"},
				{u8"x",json::array{
					json::map{
						{u8"id",u8"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"},
					},
				}},
			},
		},
		{
			"y_object_simple"sv,
			u8"{\"a\":[]}"sv,
			json::map{{u8"a",json::array{}},},
		},
		{
			"y_object_string_unicode"sv,
			u8"{\"title\":\"\\u041f\\u043e\\u043b\\u0442\\u043e\\u0440\\u0430 \\u0417\\u0435\\u043c\\u043b\\u0435\\u043a\\u043e\\u043f\\u0430\" }"sv,
			json::map{{u8"title",u8"\u041f\u043e\u043b\u0442\u043e\u0440\u0430 \u0417\u0435\u043c\u043b\u0435\u043a\u043e\u043f\u0430"},},
		},
		{
			"y_object_with_newlines"sv,
			u8"{\n\"a\": \"b\"\n}"sv,
			json::map{{u8"a",u8"b"},},
		},
		{
			"y_string_1_2_3_bytes_UTF-8_sequences"sv,
			u8"[\"\\u0060\\u012a\\u12AB\"]"sv,
			mk_array(u8"`\u012a\u12ab"),
		},
		{
			"y_string_accepted_surrogate_pair"sv,
			u8"[\"\\uD801\\udc37\"]"sv,
			json::array{u8"\uFFFD\uFFFD",},
		},
		{
			"y_string_accepted_surrogate_pairs"sv,
			u8"[\"\\ud83d\\ude39\\ud83d\\udc8d\"]"sv,
			json::array{u8"\uFFFD\uFFFD\uFFFD\uFFFD",},
		},
		{
			"y_string_allowed_escapes"sv,
			u8"[\"\\\"\\\\\\/\\b\\f\\n\\r\\t\"]"sv,
			json::array{u8"\"\\/\b\f\n\r\t",},
		},
		{
			"y_string_backslash_and_u_escaped_zero"sv,
			u8"[\"\\\\u0000\"]"sv,
			json::array{u8"\\u0000",},
		},
		{
			"y_string_backslash_doublequotes"sv,
			u8"[\"\\\"\"]"sv,
			json::array{u8"\"",},
		},
		{
			"y_string_comments"sv,
			u8"[\"a/*b*/c/*d//e\"]"sv,
			json::array{u8"a/*b*/c/*d//e",},
		},
		{
			"y_string_double_escape_a"sv,
			u8"[\"\\\\a\"]"sv,
			json::array{u8"\\a",},
		},
		{
			"y_string_double_escape_n"sv,
			u8"[\"\\\\n\"]"sv,
			json::array{u8"\\n",},
		},
		{
			"y_string_escaped_control_character"sv,
			u8"[\"\\u0012\"]"sv,
			json::array{u8"\022",},
		},
		{
			"y_string_escaped_noncharacter"sv,
			u8"[\"\\uFFFF\"]"sv,
			json::array{u8"\uFFFF",},
		},
		{
			"y_string_in_array"sv,
			u8"[\"asd\"]"sv,
			json::array{u8"asd",},
		},
		{
			"y_string_in_array_with_leading_space"sv,
			u8"[ \"asd\"]"sv,
			json::array{u8"asd",},
		},
		{
			"y_string_last_surrogates_1_and_2"sv,
			u8"[\"\\uDBFF\\uDFFF\"]"sv,
			json::array{u8"\uFFFD\uFFFD",},
		},
		{
			"y_string_nbsp_uescaped"sv,
			u8"[\"new\\u00A0line\"]"sv,
			json::array{"new\302\240line",},
		},
		{
			"y_string_nonCharacterInUTF-8_U+10FFFF"sv,
			u8"[\"\364\217\277\277\"]"sv,
			json::array{u8"\364\217\277\277",},
		},
		{
			"y_string_nonCharacterInUTF-8_U+FFFF"sv,
			u8"[\"\357\277\277\"]"sv,
			json::array{u8"\357\277\277",},
		},
		{
			"y_string_null_escape"sv,
			u8"[\"\\u0000\"]"sv,
			json::array{u8"\000"s,},
		},
		{
			"y_string_one-byte-utf-8"sv,
			u8"[\"\\u002c\"]"sv,
			json::array{u8",",},
		},
		{
			"y_string_pi"sv,
			u8"[\"\317\200\"]"sv,
			json::array{u8"\317\200",},
		},
		{
			"y_string_reservedCharacterInUTF-8_U+1BFFF"sv,
			u8"[\"\360\233\277\277\"]"sv,
			json::array{u8"\360\233\277\277",},
		},
		{
			"y_string_simple_ascii"sv,
			u8"[\"asd \"]"sv,
			json::array{u8"asd ",},
		},
		{
			"y_string_space"sv,
			u8"\" \""sv,
			u8" ",
		},
		{
			"y_string_surrogates_U+1D11E_MUSICAL_SYMBOL_G_CLEF"sv,
			u8"[\"\\uD834\\uDd1e\"]"sv,
			json::array{u8"\uFFFD\uFFFD",},
		},
		{
			"y_string_three-byte-utf-8"sv,
			u8"[\"\\u0821\"]"sv,
			mk_array(u8"\u0821"),
		},
		{
			"y_string_two-byte-utf-8"sv,
			u8"[\"\\u0123\"]"sv,
			mk_array(u8"\u0123"),
		},
		{
			"y_string_u+2028_line_sep"sv,
			u8"[\"\342\200\250\"]"sv,
			mk_array(u8"\342\200\250"),
		},
		{
			"y_string_u+2029_par_sep"sv,
			u8"[\"\342\200\251\"]"sv,
			json::array{u8"\342\200\251",},
		},
		{
			"y_string_uEscape"sv,
			u8"[\"\\u0061\\u30af\\u30EA\\u30b9\"]"sv,
			mk_array(u8"a\u30af\u30ea\u30b9"),
		},
		{
			"y_string_uescaped_newline"sv,
			u8"[\"new\\u000Aline\"]"sv,
			json::array{"new\nline",},
		},
		{
			"y_string_unescaped_char_delete"sv,
			u8"[\"\177\"]"sv,
			json::array{u8"\177",},
		},
		{
			"y_string_unicode"sv,
			u8"[\"\\uA66D\"]"sv,
			mk_array(u8"\ua66d"),
		},
		{
			"y_string_unicodeEscapedBackslash"sv,
			u8"[\"\\u005C\"]"sv,
			json::array{u8"\\",},
		},
		{
			"y_string_unicode_2"sv,
			u8"[\"\342\215\202\343\210\264\342\215\202\"]"sv,
			json::array{u8"\342\215\202\343\210\264\342\215\202",},
		},
		{
			"y_string_unicode_escaped_double_quote"sv,
			u8"[\"\\u0022\"]"sv,
			json::array{"\"",},
		},
		{
			"y_string_unicode_U+10FFFE_nonchar"sv,
			u8"[\"\\uDBFF\\uDFFE\"]"sv,
			json::array{u8"\uFFFD\uFFFD",},
		},
		{
			"y_string_unicode_U+1FFFE_nonchar"sv,
			u8"[\"\\uD83F\\uDFFE\"]"sv,
			json::array{u8"\uFFFD\uFFFD",},
		},
		{
			"y_string_unicode_U+200B_ZERO_WIDTH_SPACE"sv,
			u8"[\"\\u200B\"]"sv,
			mk_array(u8"\u200b"),
		},
		{
			"y_string_unicode_U+2064_invisible_plus"sv,
			u8"[\"\\u2064\"]"sv,
			mk_array(u8"\u2064"),
		},
		{
			"y_string_unicode_U+FDD0_nonchar"sv,
			u8"[\"\\uFDD0\"]"sv,
			json::array{u8"\uFDD0",},
		},
		{
			"y_string_unicode_U+FFFE_nonchar"sv,
			u8"[\"\\uFFFE\"]"sv,
			json::array{u8"\uFFFE",},
		},
		{
			"y_string_utf8"sv,
			u8"[\"\342\202\254\360\235\204\236\"]"sv,
			json::array{u8"\342\202\254\360\235\204\236",},
		},
		{
			"y_string_with_del_character"sv,
			u8"[\"a\177a\"]"sv,
			json::array{u8"a\177a",},
		},
		{
			"y_structure_lonely_false"sv,
			u8"false"sv,
			false,
		},
		{
			"y_structure_lonely_int"sv,
			u8"42"sv,
			42ll,
		},
		{
			"y_structure_lonely_negative_real"sv,
			u8"-0.1"sv,
			-0.100000,
		},
		{
			"y_structure_lonely_null"sv,
			u8"null"sv,
			nullptr,
		},
		{
			"y_structure_lonely_string"sv,
			u8"\"asd\""sv,
			u8"asd",
		},
		{
			"y_structure_lonely_true"sv,
			u8"true"sv,
			true,
		},
		{
			"y_structure_string_empty"sv,
			u8"\"\""sv,
			u8"",
		},
		{
			"y_structure_trailing_newline"sv,
			u8"[\"a\"]\n"sv,
			json::array{u8"a",},
		},
		{
			"y_structure_true_in_array"sv,
			u8"[true]"sv,
			json::array{true,},
		},
		{
			"y_structure_whitespace_array"sv,
			u8" [] "sv,
			json::array{},
		},
	};
}  // namespace json::testing
#pragma once
